<!DOCTYPE html>
<html>

<head>
    <title>Control UI</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/stylesheets/jquery.mobile-1.4.5.css" />
    <!-- <style>
        #camera_view {
            top: 0;
            left: 0;
            z-index: -1;
            width: 100%;
            height: auto;
            background: url() no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }
    </style> -->
</head>

<body>
    <div data-role="page" id="joystick">
        <div data-role="header" data-position="fixed">
            <h1>UI Prototype</h1>
        </div>
        <div data-role="main" class="ui-content">
            <img id="camera_view" width="100%" height="auto" alt="No Resource Available!">
        </div>
    </div>

    <script src="/javascripts/jquery-2.1.4.min.js"></script>
    <script src="/javascripts/jquery.mobile-1.4.5.js"></script>
    <script src="/javascripts/socket.io.js"></script>
    <script src="/javascripts/nipplejs.min.js"></script>
    <script>
        function getSize(element, percent){
            var tem = (element.clientWidth > element.clientHeight ? element.clientHeight : element.clientWidth);
            return parseInt(tem * percent);
        }

        var nippleManager = nipplejs.create({
            zone: document.getElementById('joystick'),
            mode: 'static',
            position: {right: '20%', top: '50%'},
            catchDistance: 150,
            color: 'blue',
            threshold:0.4,
            size: getSize(document.body, 0.25)
        });

        var socket = io.connect();
        function sendNipple(joystick){
            socket.emit('ctrlData', {
                "joystick" : joystick
            });
        }

        var joystickLast = {distance: 0, angleDegree: 0};
        var joystickNow = {distance: 0, angleDegree: 0};

        nippleManager.on('move', function(evt, data) {
            joystickNow.distance = Math.round(data.distance);
            joystickNow.angleDegree = Math.round(data.angle.degree);
        }).on('end', function(evt, data){
            joystickNow.distance = 0;
            joystickNow.angleDegree = 0;
        });

        setInterval(function(){
            if(joystickNow.distance != joystickLast.distance ||
               joystickNow.angleDegree != joystickLast.angleDegree){

                joystickLast.distance = joystickNow.distance;
                joystickLast.angleDegree = joystickNow.angleDegree;
                sendNipple(joystickNow);
            }
        }, 100);

        var server_ip = "<%= ServerIP %>";
        var server_streamingPort = '8000';
        var streaming_url = 'http://' + server_ip + ':' + server_streamingPort + '/stream.mjpg';
        var streamingElement = document.getElementById("camera_view");

        //camera view
        function loadstreaming() {
            streamingElement.src = streaming_url;
        }        
        loadstreaming();

        /*debug use
        function offloadstreaming() {
            streamingElement.src = "/images/stream.mjpg.jpg";
            //$("#camera_view").attr("src", "/stream.mjpg.jpg");
            //streamingelement.reload();
        }
        offloadstreaming();
        */        
    </script>
</body>

</html>